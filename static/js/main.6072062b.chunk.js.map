{"version":3,"sources":["components/Country.jsx","components/CountryNavBar.jsx","components/Country-list.jsx","country-reducer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Country","population","name","capital","flag","Card","className","elevation","CardContent","alt","src","loading","Typography","CountryBar","useState","inputValue","setInputValue","dispatch","useDispatch","AppBar","Grid","container","justify","id","alignItems","item","xs","TextField","variant","label","value","onChange","e","target","type","payload","Countries","countryList","useSelector","state","countryListByName","useEffect","fetch","then","res","json","list","catch","console","log","length","map","c","sm","md","lg","initialState","countryReducer","action","filter","toLowerCase","startsWith","store","createStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6072062b.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './country.css';\n\nfunction Country({\n  // eslint-disable-next-line react/prop-types\n  population, name, capital, flag,\n}) {\n  return (\n    <Card className=\"country-card\" elevation={2}>\n      <CardContent>\n        <img\n          alt=\"flag\"\n          src={flag}\n          loading=\"lazy\"\n          className=\"country-flag\"\n        />\n        <Typography className=\"country-name\">{name}</Typography>\n        <Typography>\n          <span className=\"sub-title\">Capital: </span>\n          {capital}\n        </Typography>\n        <Typography>\n          <span className=\"sub-title\">Population: </span>\n          {population}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Country;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport './countrynavbar.css';\n\nexport default function CountryBar() {\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useDispatch();\n\n  const filterByName = (e) => {\n    setInputValue(e.target.value);\n    dispatch({\n      type: 'SET_COUNTRY_BY_NAME',\n      payload: e.target.value,\n    });\n  };\n\n  return (\n    <AppBar>\n      <Grid container justify=\"flex-start\" id=\"nav-bar\" alignItems=\"center\">\n        <Grid item xs={4}>\n          <TextField variant=\"outlined\" id=\"search-field\" label=\"Search\" value={inputValue} onChange={filterByName} />\n        </Grid>\n      </Grid>\n\n    </AppBar>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Country from './Country';\nimport './countrylist.css';\nimport CountryBar from './CountryNavBar';\n\nexport default function Countries() {\n  const dispatch = useDispatch();\n  const url = 'https://restcountries.eu/rest/v2/all';\n  const countryList = useSelector((state) => state.countryList);\n  const countryListByName = useSelector((state) => state.countryListByName);\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((list) => {\n        dispatch({\n          type: 'SET_COUNTRY_LIST',\n          payload: list,\n        });\n      })\n      // eslint-disable-next-line no-console\n      .catch(() => console.log('error'));\n  }, []);\n\n  return (\n    <>\n      <CountryBar />\n      {\n          countryListByName.length > 0\n            ? (\n              <Grid container id=\"card-container\" justify=\"center\">\n                {\n              countryListByName.map((c) => (\n                <Grid item container sm={12} md={4} lg={3} key={c.name} justify=\"center\">\n                  <Country\n                    name={c.name}\n                    capital={c.capital}\n                    flag={c.flag}\n                    population={c.population}\n                  />\n                </Grid>\n              ))\n              }\n              </Grid>\n            )\n            : (\n              <Grid container id=\"card-container\" justify=\"center\">\n                {\n            countryList.map((c) => (\n              <Grid item container sm={12} md={4} lg={3} key={c.name} justify=\"center\">\n                <Country\n                  name={c.name}\n                  capital={c.capital}\n                  flag={c.flag}\n                  population={c.population}\n                />\n              </Grid>\n            ))\n            }\n              </Grid>\n            )\n        }\n\n    </>\n  );\n}\n","const initialState = {\n  countryList: [],\n  countryListByName: [],\n};\nfunction countryReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_COUNTRY_LIST': {\n      return { ...state, countryList: action.payload };\n    }\n    case 'SET_COUNTRY_BY_NAME': {\n      const list = state.countryList;\n      const filter = (c) => c.name.toLowerCase().startsWith(action.payload.toLowerCase());\n      const countryListByName = list.filter(filter);\n      return { ...state, countryListByName };\n    } default: {\n      return state;\n    }\n  }\n}\n\nexport default countryReducer;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport Countries from './components/Country-list';\nimport countryReducer from './country-reducer';\n\nconst store = createStore(countryReducer);\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Countries />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}